; ###
; # vkucukcakar/php-fpm
; # PHP-FPM Docker image with automatic configuration file creation and export
; # Copyright (c) 2017 Volkan Kucukcakar
; # 
; # This file is part of vkucukcakar/php-fpm.
; # 
; # vkucukcakar/php-fpm is free software: you can redistribute it and/or modify
; # it under the terms of the GNU General Public License as published by
; # the Free Software Foundation, either version 2 of the License, or
; # (at your option) any later version.
; # 
; # vkucukcakar/php-fpm is distributed in the hope that it will be useful,
; # but WITHOUT ANY WARRANTY; without even the implied warranty of
; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; # GNU General Public License for more details.
; #
; # You should have received a copy of the GNU General Public License
; # along with this program.  If not, see <http://www.gnu.org/licenses/>.
; # 
; # This copyright notice and license must be retained in all files and derivative works.
; ###

; ###
; # Container     : ${CONTAINER_NAME}
; # Symbolic link : /usr/local/etc/php-fpm.d/www.conf
; # Description   : Upstream server php-fpm configuration file. Edit according to your needs.
; # Note          : This file is automatically created by vkucukcakar/php-fpm image
; ###


; Notes:
; Docker official php-fpm image works pretty well and forwards the logging back to Docker.
; It defines "error_log=/proc/self/fd/2" at "[global]" section and "access.log=/proc/self/fd/2" at "[www]" section in "/usr/local/etc/php-fpm.d/docker.conf" file.
;
; WARNING:
; If you want to log php script errors with php container, you can use "php_flag[log_errors]=On" below.
; Do not touch the php-fpm default "log_level=notice" option to log php errors (with php_flag[log_errors]=On) even a fatal error!!!


[global]

; ### Miscellaneous global options ###

; Specify the event mechanism FPM will use.
;events.mechanism = epoll


[www]

; ### Derived from www.conf file ###

user = www-data
group = www-data

; Note: Docker official PHP image has the file "/usr/local/etc/php-fpm.d/docker.conf" defines "access.log = /proc/self/fd/2" at "[www]" section.
; Access log. Write "/dev/null" to disable php access log. (Of course logging daemon can be configured to purge it too)
; access.log = "/dev/null"

; ### Process manager settings ###

; Comments in this block are from www.conf file
;
; Choose how the process manager will control the number of child processes.
; Possible Values:
;   static  - a fixed number (pm.max_children) of child processes;
;   dynamic - the number of child processes are set dynamically based on the
;             following directives. With this process management, there will be
;             always at least 1 children.
;             pm.max_children      - the maximum number of children that can
;                                    be alive at the same time.
;             pm.start_servers     - the number of children created on startup.
;             pm.min_spare_servers - the minimum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is less than this
;                                    number then some children will be created.
;             pm.max_spare_servers - the maximum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is greater than this
;                                    number then some children will be killed.
;  ondemand - no children are created at startup. Children will be forked when
;             new requests will connect. The following parameter are used:
;             pm.max_children           - the maximum number of children that
;                                         can be alive at the same time.
;             pm.process_idle_timeout   - The number of seconds after which
;                                         an idle process will be killed.
; Note: This value is mandatory.
pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
;pm.process_idle_timeout = 10s;

; prevent memory leaks
pm.max_requests = 500


; ### Opcache settings ###

php_admin_value[opcache.memory_consumption] = 64
php_admin_value[opcache.interned_strings_buffer] = 8
php_admin_value[opcache.max_accelerated_files] = 5000
php_admin_value[opcache.validate_timestamps] = 1
php_admin_value[opcache.revalidate_freq] = 2
php_admin_value[opcache.revalidate_path] = 0
php_admin_value[opcache.enable_cli] = 0
php_admin_value[opcache.max_file_size] = 0
php_admin_value[opcache.file_cache] = /data/opcache
php_admin_value[opcache.file_cache_only] = 0


; ### Override miscellaneous php.ini values ###
;
; Use php_value to allow, php_admin_value to prevent override. Use php_flag, php_admin_flag for boolean configuration directives.

; Sendmail path
;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
php_admin_value[sendmail_path] = /usr/sbin/ssmtp -t -i -f www@my.domain.com

; Session save path
php_admin_value[session.save_path] = /sessions

; Manage probability that the gc (garbage collection) routine is started.
;php_admin_value[session.gc_probability] = 1

; gc_probability/gc_divisor, e.g. 1/100 means there is a 1% chance that the GC process starts
;php_admin_value[session.gc_divisor] = 100

; Seconds before seeing data as garbage
;php_admin_value[session.gc_maxlifetime] = 1440

; Upload temporary directory
;php_admin_value[upload_tmp_dir] = /tmp

; System temporary directory
;php_admin_value[sys_temp_dir] = /tmp

; Wsdl cache directory
;php_admin_value[soap.wsdl_cache_dir] = /wsdlcache

; Prevent disclosure of php version (Hide X-Powered-By: header)
php_flag[expose_php] = Off

; PHP memory limit
php_value[memory_limit] = 32M

; Upload maximum file size
php_value[upload_max_filesize] = 16M

; Post maximum size
php_value[post_max_size] = 16M

; Max execution time
php_value[max_execution_time] = 30

; Log script error messages to server's error log (On/Off) (default=Off)
php_flag[log_errors] = On

; Enable/Disable error reporting (On/Off/stderr)
;php_value[display_errors] = Off

; Error reporting level (0 means disabled)
;php_value[error_reporting] = 'E_ALL & ~E_NOTICE'

; Disable PHP classes example
;php_value[disable_classes] = 'splfileobject'

; Disable PHP functions example
;php_value[disable_functions] = 'define_syslog_variables, escapeshellarg, escapeshellcmd, eval, exec, fp, fput, ftp_connect, ftp_exec, ftp_get, ftp_login, ftp_nb_fput, ftp_put, ftp_raw, ftp_rawlist, highlight_file, ini_alter, ini_get_all, ini_restore, inject_code, mysql_pconnect, openlog, passthru, php_uname, phpAds_remoteInfo, phpAds_XmlRpc, phpAds_xmlrpcDecode, phpAds_xmlrpcEncode, popen, posix_getpwuid, posix_kill, posix_mkfifo, posix_setpgid, posix_setsid, posix_setuid, posix_setuid, posix_uname, proc_close, proc_get_status, proc_nice, proc_open, proc_terminate, shell_exec, syslog, system, xmlrpc_entity_decode, dl, set_time_limit'













